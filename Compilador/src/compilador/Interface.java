/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package compilador;

import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author matheus
 */
public class Interface extends JFrame {

    /**
     * Creates new form Interface
     */
    Gerenciador INSTANCE = Gerenciador.getInstance();
    private static Lexico analisadorLexico;
    private static Sintatico analisadorSintatico;

    public Interface() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaPrograma = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextAreaErro = new javax.swing.JTextArea();
        barraMenu = new javax.swing.JMenuBar();
        arquivoButton = new javax.swing.JMenu();
        importarLPDItem = new javax.swing.JMenuItem();
        executarButton = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(640, 360));
        setPreferredSize(new java.awt.Dimension(960, 540));

        jTextAreaPrograma.setBackground(new java.awt.Color(39, 40, 34));
        jTextAreaPrograma.setColumns(20);
        jTextAreaPrograma.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jTextAreaPrograma.setForeground(new java.awt.Color(250, 250, 250));
        jTextAreaPrograma.setRows(5);
        jTextAreaPrograma.setBorder(javax.swing.BorderFactory.createEmptyBorder(2, 5, 1, 1));
        jTextAreaPrograma.setCaretColor(new java.awt.Color(255, 255, 255));
        jTextAreaPrograma.setSelectedTextColor(new java.awt.Color(250, 250, 250));
        jTextAreaPrograma.setSelectionColor(new java.awt.Color(204, 204, 204));
        jScrollPane1.setViewportView(jTextAreaPrograma);
        jTextAreaPrograma.getAccessibleContext().setAccessibleDescription("");

        jTextAreaErro.setEditable(false);
        jTextAreaErro.setBackground(new java.awt.Color(39, 40, 34));
        jTextAreaErro.setColumns(20);
        jTextAreaErro.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jTextAreaErro.setForeground(new java.awt.Color(204, 0, 0));
        jTextAreaErro.setRows(5);
        jTextAreaErro.setBorder(javax.swing.BorderFactory.createEmptyBorder(2, 3, 1, 1));
        jTextAreaErro.setCaretColor(new java.awt.Color(39, 40, 34));
        jTextAreaErro.setSelectedTextColor(new java.awt.Color(204, 0, 0));
        jTextAreaErro.setSelectionColor(new java.awt.Color(204, 204, 204));
        jScrollPane2.setViewportView(jTextAreaErro);
        jTextAreaErro.getAccessibleContext().setAccessibleName("");

        arquivoButton.setText("Arquivo");

        importarLPDItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        importarLPDItem.setText("Importar LPD");
        importarLPDItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importarLPDItemActionPerformed(evt);
            }
        });
        arquivoButton.add(importarLPDItem);

        barraMenu.add(arquivoButton);

        executarButton.setText("Compilar");

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F6, 0));
        jMenuItem2.setText("Executar");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        executarButton.add(jMenuItem2);

        barraMenu.add(executarButton);

        setJMenuBar(barraMenu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 960, Short.MAX_VALUE)
            .addComponent(jScrollPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 432, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void importarLPDItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importarLPDItemActionPerformed
        // TODO add your handling code here:
        JFileChooser abrir_arquivo = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Arquivos LPD", "txt");    //seta apenas extensoes .obj
        abrir_arquivo.setFileFilter(filter);
        File arquivo_lpd;
        abrir_arquivo.setFileSelectionMode(JFileChooser.OPEN_DIALOG);
        int valor = abrir_arquivo.showOpenDialog(null);

        if (valor == JFileChooser.APPROVE_OPTION) {
            arquivo_lpd = abrir_arquivo.getSelectedFile(); //pego o arquivo escolhido
            if (INSTANCE.LerArquivo(arquivo_lpd, jTextAreaPrograma) == false) {
                JOptionPane.showMessageDialog(null, "Erro ao abrir arquivo");
            }

        }
    }//GEN-LAST:event_importarLPDItemActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        String codigo = jTextAreaPrograma.getText();
        jTextAreaErro.setText("");
        jTextAreaPrograma.getHighlighter().removeAllHighlights();
        analisadorSintatico = new Sintatico(codigo, jTextAreaErro, jTextAreaPrograma);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Interface().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu arquivoButton;
    private javax.swing.JMenuBar barraMenu;
    private javax.swing.JMenu executarButton;
    private javax.swing.JMenuItem importarLPDItem;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextAreaErro;
    private javax.swing.JTextArea jTextAreaPrograma;
    // End of variables declaration//GEN-END:variables
}
